{"./":{"url":"./","title":"首页","keywords":"","body":"前言 由于软件的的介绍以及相关资料防止在网站的页面上看起来比较混乱 因此在这里创建GitBook来存储相关的资料 起初做此book的原因是为了给新学Delphi的朋友一个界面的介绍，但是由于Delphi的闭源，我们在教学的第一步就会让大家去安装和破解。因此选用开源的Pascal开发工具 CodeTyphon来给大家讲解。CodeTyphon和Delphi的界面基本一致，控件属性也基本一致。 CodeTyphon基础平台：FreePascal -> Lazarus -> CodeTyphon（CodeTyphon可以使用Lazarus也可使用FreePascal的依赖包） 我们这里讲解主要的系统控件和常用的使用方法，以及部分简单代码书写 本册book地址：https://www.280i.com/book/ 本册对应视频讲解地址：尚在录制中 视频相对于图片介绍更加完整，包括使用中的一些小细节，这样更适合初次接触软件开发的人群。 对于CodeTyphon的资料，我也是网络上搜集和自己的认知，这里所讲解的都是自己一边学习，一边理解的东西，不理解的我会在book中不标注，或者在视频中注明此处不理解，希望大家可以指导，让这个教学能够持续下去。 这里介绍的资料有： 软件控制台 CodeTyphon入门 Standard控件 至于详细的代码学习，请查看老侯的 跟着老侯学编程。 B站的观看地址：https://space.bilibili.com/323024121 跟着老侯学编程知识库入口： http://knowledge.coder163.com/ Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 21:12:35 "},"280i_Login/":{"url":"280i_Login/","title":"软件控制台","keywords":"","body":"软件控制台 280i-Login 我们先来看看软件主界面截图： 最新版本下载地址：https://www.280i.com/ann/8048.html 界面简易介绍： ​ 左上角点击后会自动缩放或者展开菜单栏 ​ 设置中可以设置软件的 【自动更新】【自动登录】【最小化程序】【迷你菜单】 ​ 鼠标放置在账号位置可以显示账户VIP时间，点击即可注册/找回密码 ​ 账户右侧菜单中可【更新软件】【获取时间】【打开日志】 软件运行规则： ​ 直接双击软件，或者选择对应软件后点击启动 ​ 若运行的软件不存在，软件会自动下载对应软件后启动 VIP规则： ​ 本站VIP使用统一VIP，充卡后即可享有对应的VIP软件使用权 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 08:55:19 "},"280i_Login/FishingMan.html":{"url":"280i_Login/FishingMan.html","title":"魔兽世界钓鱼小精灵","keywords":"","body":"魔兽世界钓鱼小精灵 FishingMan 此软件兼容当前所有魔兽世界版本：【正式服】【怀旧服】【私服】 软件运行快捷键：Alt + CapsLock 所有新用户请仔细查看软件中的向导，按照向导设置软件 软件界面介绍： 钓鱼技能位置：钓鱼技能放在按键 0 上 灵敏度：第一次使用，软件会根据游戏版本自动调整灵敏度，如果开始后上鱼率不是很好，可以停止后微调灵敏度 防掉线：这里为防掉线策略，对应游戏中的按键 【-】，可设置宏 /dance 或者 /stand 之类的动作宏放在此处 鱼饵： 一键上饵：只有正式服或者80级以上的怀旧服可用 怀旧上饵：这里要求游戏分辨率必须是1024*768，另外不要修改按键 “C” 对应的快捷键和角色面板的位置 鱼饵放在按键9上面 宏命令：此处的宏请放在按键【=】上，并设置对应的宏即可，可用来使用物品 如：/use 巨大的鱼 售卖垃圾：此功能仅正式服可用，本功能需要用到带NPC的坐骑，详细配置看向导，此设置比较复杂 提示信息：软件开始的时间和上钩的次数 网络延迟上钩：此处代表在点击上钩前延迟多久点击和点击后等待多久再进行新一次钓鱼。 手工拾取：此功能仅60级私服使用，例如N服等 高级模式： 找鱼漂延迟：找到鱼漂后等待判断的时间 声卡模式：获取游戏对应声卡的音量来确定上钩动作，此操作需要搭配游戏内部声卡设置，详细设置看向导 上鱼率：每分钟钓鱼的数量，正式服：4.0 左右，怀旧服 3.2 多一点 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-24 16:18:08 "},"280i_Login/NeverStop.html":{"url":"280i_Login/NeverStop.html","title":"永不停歇自动按键","keywords":"","body":"永不停歇自动按键 NeverStop 此软件可多线程操作，在对应的窗口上点击接口给对应的窗口发送按键信息。鼠标操作必须前台操作 软件快捷键 ： Ctrl + Alt + Shift + n 在中间的添加部分，添加对应的按键顺序，然后就可以在左边看到对应的任务队列，左边的队列可以右键导出或者导入。 此软件可以多线程操作，每个窗口点击后就激活一个线程，如果要停止，就在这个窗口上再点击一次快捷键即可。 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-24 16:28:38 "},"280i_Login/RandomCheck.html":{"url":"280i_Login/RandomCheck.html","title":"[Free]随机抽签","keywords":"","body":"随机抽签 RandomCheck 此软件可用来日常抽签使用 程序简介： 双击LED区域，可以修改LED显示内容 双击文字区域可修改字体 导入：导入txt列表到上不文字区域，用于抽签的列表 导出：导出下部文字区域的列表到txt文件 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 21:16:24 "},"CodeTyphon/":{"url":"CodeTyphon/","title":"CodeTyphon入门","keywords":"","body":"媲美Rad xe10的开元Pascal开发工具 这里我们要介绍的 CodeTyphon 是类似Rad xe系列的pascal语言开发工具，只要使用过Delphi7或者xe版本的用户很轻松可以上手此开源IDE。 至于选择开源IDE的原因：由于Delphi是付费软件，当你做一些小软件，不申请著作权的时候确实不错。但是当你逐步做起来后，会发现付费软件在这里又成为你的限制。 Delphi的优点：Delphi xe系列有大量的商业控件，这些控件可以让你的开发更加快捷。 CodeTyphon的优点：开源。 这个图片是安装后配置完成的样子，和Delphi 的xe10一样的结构。 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-24 20:31:24 "},"CodeTyphon/1_Intro.html":{"url":"CodeTyphon/1_Intro.html","title":"1.IDE介绍","keywords":"","body":"CodeTyphon简介 这里我们不做太多的介绍，将来自官网的介绍翻译给大家 官方地址：https://www.pilotlogic.com/sitejoom/index.php/wiki/84-wiki/codetyphon-studio/72-codetyphon-about Code Typhon是免费的下一代多操作系统“ Visual Programming Studio”。 适用于REAL Multi-OS，Multi-CPU，Multi-Platform和 Cross-Build本 机编程。 这是一个没有成本，自由和开放源码 “TERA”编程工作室， 它为您提供了构建任何类型的应用程序，库等，shang 没有限制。 有： Typhon V-IDE（可视化集成开发环境）。 对象Pascal编译器。 工具。 免费组件包。 免费库。 超多demo。 所有这些都是免费和开源的。 支持许多主机操作系统：Windows，Linux，MacOS，OpenIndiana，FreeBSD，OpenBSD，NetBSD，DragonFly和Solaris。 支持200多个OS-CPU平台目标。 CodeTyphon编程工作室完全免费，供您使用，开发，享受和共享。 这样，任何人都可以在没有法律麻烦的情况下将我们的作品用于自己的目的。 CodeTyphon的 设计易于操作，但功能强大，足以满足您的所有专业和工业编程需求。 在CodeTyphon的开发过程中，我们添加了许多新功能。 我们的重点是同时提供功能和可用性，并使您的软件开发愉快而又不会使您的感觉超负荷。 我们打算继续改进和稳定CodeTyphon，以便为您提供最佳的编程体验。 我们希望您会喜欢使用CodeTyphon。 如果不是这样，请向我们的论坛报告错误和建议，以帮助我们做得更好，如果不用代理论坛访问很慢 要获得帮助，您可以从这里开始 CodeTyphon被许可为：**免费软件**。 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-25 12:04:11 "},"CodeTyphon/2_Install.html":{"url":"CodeTyphon/2_Install.html","title":"2.IDE安装","keywords":"","body":"CodeTyphon安装流程 1.首先来确认下载 官方下载地址 ： https://www.pilotlogic.com/sitejoom/index.php/downloads.html 本站共享下载地址： 共享地址:http://u.280i.com/index.php?share/file&user=1&sid=4fVgQ96R 提取密码:2f1Ng、 2.解压压缩包到任意目录，（不要包含中文目录） 3.右键管理云模式运行 install.bat 由于我这里已经安装，就不截图了，首先 0 安装，会提示安装DirectX ，按照要求安装，记得去掉DirectX上的一个广告选项 接下来 1 安装，这个时候就会安装管理器。 由于我的管理器已经安装好 IDE，因此项目比较多，请勿着急，接下来才是真正的安装步骤 4.安装IDE环境，我们这里选择全部安装 （ bigIDE） 这里选择完整编译安装，如果需要32位的支持，可以安装32位的版本 此为编译过程。 由于软件需要编译后安装，因此对于机器的CPU要求比较高，我的机器较老，有点慢 5.编译安装完成后，桌面会生成对应的快捷方式，打开即可。也可以通过 CodeTyphon Center进入 第一个为软件中心，第二个就是我们的主角 Typhon Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-24 20:59:55 "},"CodeTyphon/3_Setting.html":{"url":"CodeTyphon/3_Setting.html","title":"3.界面配置","keywords":"","body":"界面配置 默认界面是分离模式，和Delphi7的默认格式一样 这个就是我们看到的默认界面 1.设置语言： Tools - Options General - Language - Chinese [zh_CN] --【OK】-- 重启IDE ，然后就能得到一个中文的IDE，虽然部分界面仍是英文，但是也不影响日常的使用工作。 2.设置窗口停靠 窗口 - Restore default layout ALL Docked 这里窗口就整合到一起了。 3.添加对应窗体 这里添加两个： 代码浏览器 和 组件 弹出的窗口拖拽黄色部门即可停靠，拖动标题栏是无法停靠的 调出工程查看器 依旧拖拽黄色部分停靠 最终这就是我们停靠后的截图效果。具体的还可以修改字体已经代码编辑区域的颜色等信息，这些均在设置中 配置完成还有一件事情，就是要保存窗体布局 default : 默认窗体布局 default docked: 默认窗体停靠布局 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-24 22:04:38 "},"CodeTyphon/4_Interface.html":{"url":"CodeTyphon/4_Interface.html","title":"4.界面介绍","keywords":"","body":"界面简介 界面推荐使用此类模式，对于22寸以上显示器比较适用，分辨率1920*1080以上推荐 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-25 17:33:43 "},"CodeTyphon/5_Property.html":{"url":"CodeTyphon/5_Property.html","title":"5.属性","keywords":"","body":"属性(此处会逐步完善) 属性默认显示正常字体，如果修改对应属性不是默认值，对应字体就变为粗体 属性 翻译 参数 配套控件 配套事件 说明 Action 动作 ActionList * 选择ActionList中的动作执行 ActiveControl 激活控件 默认激活的控件 align 对齐方式 Form中无效，控件中常用属性 AllowDropFiles 允许拖放文件 True/False DropFiles AlphaBlend Alpha透明 True/False 打开Alpha透明 AlphaBlendvalue Alpha透明值 0-255 确定窗体的透明度 0-255 Anchors 锚点 用来确定控件的对齐 AutoScroll 自动滚动 True/False 根据窗口自动生成滚动条 AutoSize 自动大小 True/False 根据内容自动调整大小 BiDiMode 为从右向左写的语言提供支持 BorderIcons 边框图标 BorderStyle 边框形状(样式) BorderWidth 边框宽度 Caption 标题/文字内容 ChildSizing Color 颜色 一般为窗体或者控件的可见颜色 Constraints 限制条件 Cursor 光标 光标在窗体或者空间上的光标形状 DefaultMonitor 默认显示器 程序显示在哪个默认显示器上 DesignTimePPI 设计时间PPI 写程序的时候的PPI DockSite 锚点 True/False DoubleBuffered 双重缓冲 True/False 重要用来解决有时候程序闪烁的问题 DragKind DragMode Enabled 可用 True/False 控件或窗体是否可用，不可用为灰色 Font 字体 FormStyle 窗体样式 设置窗体类型以及最前显示 Height 高度 窗体或控件的高度 HelpContext 帮助ID号 HelpFile 帮助文件 HelpKeyword 帮助关键词 HelpType 帮助类型 Hint 提示信息 必须 ShowHint打开才可显示 HorzScrollBar 横向滚动条 Icon 图标 Form标题栏的图标 KeyPreview 按键预览 指定此窗体是否需在目前的ACTIVE组件之前取得键盘输入 Left 左边距 Menu 菜单 TMainMenu Name 名称 Text ParentBiDiMode True/False ParentDoubleBuffered True/False ParentFont 父字体 True/False Picture 图片 TImage ... 包含图片类控件的图片选择 PixelsPerInch PopupMenu 弹出菜单 TPopupMenu 右键菜单 PopupMode 弹出模式 PopupParent Position Proportional 锁定比例 缩放的时候按照比例缩放，需要Stretch属性开启 Scaled 缩放比例 True/False SessionProperties 会话属性 ShowHint 显示提示 True/False 鼠标放在窗体或者空间上显示Hint中的内容 ShowInTaskBar 任务栏显示 Stretch 延伸/缩放 TImage ... 按照控件大小自动缩放 StretchInEnabled 延伸缩小开启 TImage ... StretchOutEnabled 延伸放大开启 TImage ... Tag 标签 Top 高度 对应顶部的高度 Transparent 透明 控件透明 UseDockManager 使用停靠管理器 True/False VertScrollBar Visible 可见性 True/False Width 宽度 窗体或者控件的宽度 WindowState 窗口显示状态 最大化/最小化/全屏 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-25 17:33:11 "},"CodeTyphon/6_Event.html":{"url":"CodeTyphon/6_Event.html","title":"6.事件","keywords":"","body":"事件（逐步完善中） 事件 翻译 说明 Action 动作 和属性中的一样 ActiveControl 默认控件 和属性中的一样 Constraints 限制条件 和属性中的一样 Menu 菜单 和属性中的一样 OnActivate 激活时执行 OnChangeBounds 变更边界 OnClick 点击时执行 * OnClose 关闭时执行 * OnCloseQuery 关闭请求时执行 此事件优先于OnClose OnConstrainedResize 限制调整时执行 OnContextPopup 滚动条右键时执行 OnCreate 创建时执行 * OnDbClick 双及时执行 * OnDeactivate 取消激活状态时执行 OnDestroy 销毁时执行 * OnDockDrop 停靠释放时执行 OnDockOver 停靠经过时执行 OnDrayDrop OnDrayOver OnDropFiles 拖放文件后执行 OnEndDock 停靠完成后执行 OnGetSiteInfo OnHelp 帮助按键时执行 OnHide 隐藏时执行 * OnKeyDown 按键按下时执行 OnKeyPress 按键时执行 OnKeyUP 按键弹起时执行 OnMouseDown 鼠标按下时执行 OnMouseEnter 鼠标进入控件范围时执行 OnMouseLeave 鼠标离开控件方位时执行 OnMouseMove 鼠标移动时执行 OnMouseUp 鼠标弹起时执行 OnMouseWheel 鼠标滚轮滚动时执行 OnMouseWheelDown 滚轮向下时执行 OnMouseWheelHorze 滚轮横向滚动时执行 OnMouseWheelLeft 滚轮向左时执行 OnMouseWheelRight 滚轮向右时执行 OnMouseWheelUp 滚轮向上时执行 OnPaint 重绘界面时执行 * OnResize 调整大小时执行 * OnShortCut 快捷键时执行 * OnShow 显示时执行 * OnShowHint 显示提示信息时执行 OnStartDock 开始停靠时执行 OnUnDock 未停靠时执行 OnUTF8KeyPress UTF8按键时执行 OnWindowStateChange 窗体状态变化时执行 * PopupMenu 和属性中的一样 PopupParent 和属性中的一样 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-25 17:34:10 "},"CodeTyphon/7_TMainMenu.html":{"url":"CodeTyphon/7_TMainMenu.html","title":"Standard控件","keywords":"","body":"TMainMenu 主菜单 ​ 主菜单在大型软件中使用的较多，功能比较繁多的时候使用 主菜单控件 接下来双击窗体上的控件，来增加菜单选项 ​ 此处菜单的图标需要搭配 ImageList 来显示图形，此操作将在ImageList中讲解 【F9】运行程序，查看效果： ​ Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 11:39:00 "},"CodeTyphon/8_TPopupMenu.html":{"url":"CodeTyphon/8_TPopupMenu.html","title":"8.TPopupMenu","keywords":"","body":"TPopupMenu 弹出菜单 ​ 右键菜单，常用菜单，日常开发中使用频率很高。 添加控件 双击控件，配置菜单 配置弹出菜单响应位置： 选择Form1，在PopupMenu属性中，下拉选择新添加的 PopupMenu1 【F9】 运行程序，在窗体上右键查看效果 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 11:38:07 "},"CodeTyphon/9_TButton.html":{"url":"CodeTyphon/9_TButton.html","title":"9.TButton","keywords":"","body":"TButton 按钮 日常软件操作的主要控件，必须熟练使用的控件，特别是控件对应的事件 添加Button控件到窗口 调整按钮大小 Caption 修改按钮名称 Align 对齐： Align=alButtom Align=alClient Align=alCustom Align=alLeft Align=alNone(默认) Align=alRight Align=alTop AutoSize 自动大小 ​ 选择AutoSize后，按钮会根据俺就中文字的长度和高度来自适应按钮的长度和高度 Cursor 光标形状 ​ 此处截图比较麻烦，设置为 crHandPoint ，鼠标移动到按钮上就会显示为手的形状 Enable 可用/禁用 ​ 显示效果： Font 字体 设置方式： 设置效果： Hint 提示信息 ShowHint 设置提示信息： 设置效果： Left & Top 左 和 上 左和上用来确定按钮位置 Height & Width 高度 和 宽度 高度和宽度确定按钮大小 Name 名字 控件的名字，日常命令操作的时候使用的就是这个名字 将按钮的Name 设置为 BtnMain ，然后在命令行中调用 命令： BtnMain.Caption := '按钮名字'; 效果： Visible 可见性 设置为True ：按钮可以看到 设置为False：按钮无法看到 IDE界面： 运行效果： Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 11:37:17 "},"CodeTyphon/10_TLabel.html":{"url":"CodeTyphon/10_TLabel.html","title":"10.TLabel","keywords":"","body":"TLabel 标签 日常使用中，主要用来可视化标注 控件 修改Caption 来修改显示内容 其他日常操作 修改字体 Font 修改鼠标类型 Cursot 修改自动大小 AutoSize 修改文字在空间中的对齐方式：Layout ： 【alBottom】底部对齐【alCenter】中间对齐【alTop】顶部对齐 修改提示信息 Hint &ShowHint 是否显示 VIsible ，一般在命令中修改 示例代码 Label1.caption := 'Label1显示的内容'; Label1.Font.Height := 120; //其他内容也可以这样修改，输入.后稍等下，会出现此控件对应的方法和属性以及事件。 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 13:11:44 "},"CodeTyphon/11_TEdit.html":{"url":"CodeTyphon/11_TEdit.html","title":"11.TEdit","keywords":"","body":"TEdit 编辑框 编辑框为交互信息的时候必须的组件，其他控件也可实现，但是此控件用的最多，例如：输入用户名和密码 添加控件 修改显示内容 属性简介 示例代码： Edit1.text := 'Edit1这个控件显示的内容'; Edit1.AutoSize := False;//关闭自动大小设置，后面修改高度才能生效 Edit1.Height := 50;//修改高度为50 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 13:12:06 "},"CodeTyphon/12_TMemo.html":{"url":"CodeTyphon/12_TMemo.html","title":"12.TMemo","keywords":"","body":"TMemo 便签 此类控件，主要用于大量文字的简易显示，Word那种类型的文字在另外一个控件中，后面会讲到。 插入控件 编辑内容 显示效果 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 13:12:15 "},"CodeTyphon/13_TToggleBox.html":{"url":"CodeTyphon/13_TToggleBox.html","title":"13.TToggleBox","keywords":"","body":"TToggleBox 滑动开关 此控件Delphi中有对应的，这里的默认显示效果不如Delphi中的显示效果，需要微调 添加控件 控件属性 控件效果 示例代码： if ToggleBox1.checked then begin //这里是要执行的任务 end; Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 13:12:27 "},"CodeTyphon/14_TCheckBox.html":{"url":"CodeTyphon/14_TCheckBox.html","title":"14.TCheckBox","keywords":"","body":"TCheckBox 选择框（多选框） 这里的选择框是多选框，也就是日常碰到的正方形的选择框，可以多选 添加控件 控件属性 显示效果 示例代码 procedure TForm1.Button1Click(Sender: TObject); begin if CheckBox1.Checked then begin CheckBox2.Checked:=True; CheckBox3.Checked:= not CheckBox3.Checked; end else begin CheckBox2.Checked:= False; end; end; 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 13:12:35 "},"CodeTyphon/15_TRadioButton.html":{"url":"CodeTyphon/15_TRadioButton.html","title":"15.TRadioButton","keywords":"","body":"TRadioButton 单选按钮 单选按钮顾名思义只能选择一个，但是如果需要2个以上的时候可以使用CheckBox。 如果是几组单选则可以使用后面的控件TRadioGroup，这样每个组里面只能存在一个Checked。 添加控件 控件属性（和ToggleBox，CheckBox 一样，重点是checked属性） 控件效果 示例代码 procedure TForm1.Button1Click(Sender: TObject); begin if RadioButton2.Checked then begin Form1.Caption := ' RadioButton2.checked'; end else begin Form1.Caption := ' RadioButton2.unchecked'; end; end; Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 13:12:45 "},"CodeTyphon/16_TListBox.html":{"url":"CodeTyphon/16_TListBox.html","title":"16.TListBox","keywords":"","body":"TListBox 列表 列表主要逐行显示，可以选择 添加控件 设置内容 运行效果 示例代码 procedure TForm1.Button1Click(Sender: TObject); begin ListBox1.Items.Add('增加项'); end; procedure TForm1.Button2Click(Sender: TObject); begin Form1.Caption := ListBox1.Items[ListBox1.ItemIndex]; //ListBox1.Items[n] ,n代表编号，从0开始 // ListBox1.ItemIndex 代表当前选中的项的编号 end; 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 19:54:35 "},"CodeTyphon/17_TComboBox.html":{"url":"CodeTyphon/17_TComboBox.html","title":"17.TComboBox","keywords":"","body":"TComboBox 组合框（也是就下拉框） 下拉框日常中用的比较多，主要记住调用下拉框选项的方法 添加控件 控件属性 运行效果（自动补全；自动下拉） 示例代码 procedure TForm1.Button1Click(Sender: TObject); begin Form1.Caption:= ComboBox1.Items[ComboBox1.ItemIndex];//这里的用法和ListBox是一样的 end; 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:18:48 "},"CodeTyphon/18_TScrollBar.html":{"url":"CodeTyphon/18_TScrollBar.html","title":"18.TScrollBar","keywords":"","body":"TScrollBar 滚动条 老式滚动条，用处还是不少的。 添加控件 控件属性 运行效果 示例代码 procedure TForm1.ScrollBar1Change(Sender: TObject); begin Edit1.Text:= ScrollBar1.Position.ToString; end; 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:18:51 "},"CodeTyphon/19_TGroupBox.html":{"url":"CodeTyphon/19_TGroupBox.html","title":"19.TGroupBox","keywords":"","body":"TGroupBox 组合框 组合框，组合框内的控件会跟随组合框的移动而整体移动 添加控件 设置属性 运行效果（此控件效果和属性图片一样） 示例代码 此控件一般不用代码，如果用代码也是修改标题和颜色而已 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:18:56 "},"CodeTyphon/20_TRadioGroup.html":{"url":"CodeTyphon/20_TRadioGroup.html","title":"20.TRadioGroup","keywords":"","body":"TRadioGroup 单选组 日常使用的比较多，特别是超过一个单选情况下使用 添加控件 设置属性 运行效果 示例代码 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:18:59 "},"CodeTyphon/21_TCheckGroup.html":{"url":"CodeTyphon/21_TCheckGroup.html","title":"21.TCheckGroup","keywords":"","body":"TCheckGroup 多选组 也是为了方便管理设置的，不像RadioGroup那么重要。 添加控件 控件属性 运行效果 示例代码 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:19:01 "},"CodeTyphon/22_TPanel.html":{"url":"CodeTyphon/22_TPanel.html","title":"22.TPanel","keywords":"","body":"TPanel 面板 窗口布局的最重要控件，日后UI大神的必会控件 添加控件 属性设置 运行效果 示例代码 //Align 也可以使用代码直接编辑 Panel1.Align := alLeft; Panel2.Align := alClient; Panel3.Align := alBottom; 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:25:06 "},"CodeTyphon/23_TFrame.html":{"url":"CodeTyphon/23_TFrame.html","title":"23.TFrame","keywords":"","body":"TFrame 框架 框架是很多新人很困惑的地方，放在窗体上有没有什么作用，其实是误解了Frame的用处，Frame是用来预制一个窗体的布局，后面可以快速调用，这样很方便。 新建Frame ​ 这里自动修改为小写了 属性设置（Frame的属性，不用修改） 运行效果 示例代码 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:39:46 "},"CodeTyphon/24_TActionList.html":{"url":"CodeTyphon/24_TActionList.html","title":"24.TActionList","keywords":"","body":"TActionList 动作列表 此控件为开发过程中使用频率比较高的控件，常用的一些操作可以写在 ActionList里面，那里需要执行对应的代码只需要在控件的Action里面选择ActionList中的Action即可。 此控件和第一个以及第二个控件一样，属于不可视的控件。 添加控件 设置属性 运行效果 示例代码 procedure TForm1.Act01Execute(Sender: TObject); begin ShowMessage('Act01'); end; procedure TForm1.Act02Execute(Sender: TObject); begin ShowMessage('Act02'); end; 补充 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 20:50:54 "},"CodeTyphon/25_sum.html":{"url":"CodeTyphon/25_sum.html","title":"第一部分控件小结","keywords":"","body":"Standard部分控件总结 Standard部分控件，是我们常用的，此部分的控件基本上对我们的要求就是熟悉各个属性，有些属性所见即所得，有些属性需要运行后才可以看到。 属性是一个新用户对于IDE必须掌握的基础，只有掌握属性后才能在代码部分调用并修改。 此处有兴趣的朋友可以一起看看下面的几个作业题 做一个类似登录的窗口 使用Label,Edit,Button, 做一个类似Word2003那样的菜单栏和右键菜单 使用Menu控件 做一个单选题和多选题的界面 使用Group类控件 使用Panel做一个布局的界面 Panel的Align属性 使用ActionList 来执行对应的任务 ShowMessage('这里是要显示的内容'); 接下来将讲解事件，了解了事件就能确定程序在何时执行那一段代码。 Copyright © 280i.com 2020 all right reserved，powered by Gitbook本书建立时间： 2020-03-26 21:04:10 "}}